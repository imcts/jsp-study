/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.54
 * Generated at: 2014-08-15 12:06:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.center;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.net.URLEncoder;
import java.io.FileInputStream;

public final class DownRoad_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

	FileInputStream fis = new FileInputStream(
			"C:\\Users\\TaeSan\\Documents\\JspSave\\mvc_sukje\\WebContent\\image\\"
			+request.getParameter("sys")
			); //서버에 있는 경로의 sys파일명을 fis에 담아주고.

	String ori = URLEncoder.encode(request.getParameter("ori"), "utf-8"); //한글 파일 깨지지 말라고 인코딩 한번더 때려주고
	
	response.setHeader("Content-Disposition", "attachment;filename="+ori); //사용자에게 어느 위치에 저장할 것인지를 물어봄.
	
	
	out.clear();//파일을 안정적으로 받기 위해, 아웃풋 스트림을 한번 비워주고,
	out=pageContext.pushBody(); //아웃풋 스트림에 클라이언트가 지정한 경로값을 대입.
	
	
	ServletOutputStream sos = response.getOutputStream(); //서블릿 아웃풋 스트림에 가져온 요청받은 아웃풋 스트림을 대입.
	
	
	ArrayList<Integer> list = new ArrayList(); //인트형태만 담을 수 있는 어레이 리스트 하나 맹글고
	
	int data; //fis에 담겨있는 데이터의 값을 받아올 녀석 ~
	
	while((data=fis.read())!=-1){ //data의 값이 하나도 없으면 -1이므로 -1이 아닐때까지 돌아라 ~ 
		list.add(data);//data에 있는 값을 리스트에 때려박아주시고
	}

	byte[] arr = new byte[list.size()]; //sos에 담아서 쏴버릴 바이트 배열 하나 만들고,
	
	for(int i=0; i<arr.length; i++){ //그 바이트 배열만큼 돌아라~
		arr[i]=(byte)list.get(i).byteValue();//리스트에서 int값을 꺼내고 바이트값으로 변경.
	}
	
	sos.write(arr);//sos에 담아서 지정되어있는 경로로 가...가버렷 ! >ㅆ <
	
	sos.close(); //sos닫아주시고,
	fis.close();//fis닫아주시고 ~ 

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
