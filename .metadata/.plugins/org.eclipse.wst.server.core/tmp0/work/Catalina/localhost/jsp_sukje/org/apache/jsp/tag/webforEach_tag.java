/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.54
 * Generated at: 2014-08-07 18:55:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Map;
import java.util.Set;
import java.util.Iterator;
import java.util.List;

public final class webforEach_tag
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent {


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }
  private java.lang.String begin;
  private java.lang.String var;
  private java.lang.String end;
  private java.lang.String step;
  private java.lang.Object items;

  public java.lang.String getBegin() {
    return this.begin;
  }

  public void setBegin(java.lang.String begin) {
    this.begin = begin;
    jspContext.setAttribute("begin", begin);
  }

  public java.lang.String getVar() {
    return this.var;
  }

  public void setVar(java.lang.String var) {
    this.var = var;
    jspContext.setAttribute("var", var);
  }

  public java.lang.String getEnd() {
    return this.end;
  }

  public void setEnd(java.lang.String end) {
    this.end = end;
    jspContext.setAttribute("end", end);
  }

  public java.lang.String getStep() {
    return this.step;
  }

  public void setStep(java.lang.String step) {
    this.step = step;
    jspContext.setAttribute("step", step);
  }

  public java.lang.Object getItems() {
    return this.items;
  }

  public void setItems(java.lang.Object items) {
    this.items = items;
    jspContext.setAttribute("items", items);
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);
    if( getBegin() != null ) 
      _jspx_page_context.setAttribute("begin", getBegin());
    if( getVar() != null ) 
      _jspx_page_context.setAttribute("var", getVar());
    if( getEnd() != null ) 
      _jspx_page_context.setAttribute("end", getEnd());
    if( getStep() != null ) 
      _jspx_page_context.setAttribute("step", getStep());
    if( getItems() != null ) 
      _jspx_page_context.setAttribute("items", getItems());

    try {
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");


	

	int begin1,end1,step1;
	String varStatus1="",var1="";
	Object items1=null;
	String res="";
	
	if(items!=null){
		items1=items;
	}
	
	if(var!=null){
		var1=var;
	}
	
	if(begin!=null){
		begin1=Integer.parseInt(begin);
	}else{
		begin1=0;
	}
	
	if(end!=null){
		end1=Integer.parseInt(end);
	}else{
		end1=0;
	}

	if(step!=null){
		step1=Integer.parseInt(step);
	}else{
		step1=1;
	}


	if(items==null){//확장포문이 아니라면, 
		for(int i=begin1; i<=end1; i+=step1){
			res+="<td>"+i+"</td>";
		}
	}
	
	else if(items!=null){//확장 포문이라면, 
		if(items1 instanceof String[]){
			String [] arr = (String[])items1;
			for(int i=0; i<arr.length; i++){
				res+="<td>"+arr[i]+"</td>";
			}
		}
		else if(items1 instanceof int[]){
			int [] arr = (int[])items1;
			for(int i=0; i<arr.length; i++){
				res+="<td>"+arr[i]+"</td>";
			}
		}
		else if(items1 instanceof char[]){
			char [] arr = (char[])items1;
			for(int i=0; i<arr.length; i++){
				res+="<td>"+arr[i]+"</td>";
			}
		}
		else if(items1 instanceof List){
			List arr = (List)items1;
			for(int i=0; i<arr.size(); i++){
				res+="<td>"+arr.get(i)+"</td>";
			}
		}
		else if(items1 instanceof Set){
			Set arr = (Set)items1;
			Iterator it = arr.iterator();
			for(int i=0; i<arr.size(); i++){
				res+="<td>"+it.next()+"</td>";
			}
		}
		else if(items1 instanceof Map){
			Map arr = (Map)items1;
			Iterator it = arr.keySet().iterator();
			for(int i=0; i<arr.size(); i++){
				res+="<td>"+it.next()+"</td>";
			} 
			res+="<br>";
			Iterator it1 = arr.keySet().iterator();
			for(int i=0; i<arr.size(); i++){
				res+="<td>"+arr.get(it1.next())+"</td>";
			}
			
			
		}
}
	
	

      out.write('\r');
      out.write('\n');
      out.print(res );
      out.write("\r\n");
      out.write("\r\n");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
